# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
  ## clusters or standalone servers, use a separate plugin instance.
  ##   example: servers = ["tcp://localhost:1883"]
  ##            servers = ["ssl://localhost:1883"]
  ##            servers = ["ws://localhost:1883"]
  servers = ["tcp://mqtt.eclipseprojects.io:1883"]

  ## Topics that will be subscribed to.
  topics = [
    "bandmon/data",
    "bandmon/+/data",
  ]

  qos = 0
  connection_timeout = "30s"

  #data_format = "influx"

  ## Enable extracting tag values from MQTT topics
  ## _ denotes an ignored entry in the topic path
  # [[inputs.mqtt_consumer.topic_parsing]]
  #   topic = ""
  #   measurement = ""
  #   tags = ""
  #   fields = ""
  ## Value supported is int, float, unit
  #   [[inputs.mqtt_consumer.topic.types]]
  #      key = type
data_format="json_v2"
  ## Enable extracting tag values from MQTT topics
  ## _ denotes an ignored entry in the topic path
  ## in my example the topic would by "track/<some property>/<devicename>
  #[[inputs.mqtt_consumer.topic_parsing]]
  #  topic = "track/+/+"
  #  measurement = "_/measurement/_"
  #  tags = "_/_/device"
  [[inputs.mqtt_consumer.json_v2]]
    [[inputs.mqtt_consumer.json_v2.object]]
        path = "[@this]"
	tags = ['call']
        timestamp_key = "epoch"
        timestamp_format = "unix"

[[outputs.influxdb_v2]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  # urls = ["unix:///var/run/influxdb.sock"]
  # urls = ["udp://127.0.0.1:8089"]
  # urls = ["http://127.0.0.1:8086"]
  urls = ["http://127.0.0.1:8086"]
  token = "yWT72jmzrWqkJVVbsJucH8KGq6ypAifIOiatTKJmCZfD7b3fdLIJieT1pBmqr-3dpRSSoHsbx2c64jpJa6ChKQ=="
  organization = "WVUARC"
  bucket= "repeater_data"
  #namepass = ["test_ahe"]

[[outputs.file]]
  files = ["stdout", "/tmp/metrics.out"]
